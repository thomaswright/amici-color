// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Color from "@texel/color";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function updateHslSGamutCanvas(canvas, ctx) {
  var xMax = canvas.width;
  var yMax = canvas.height;
  for(var x = 0; x <= xMax; ++x){
    for(var y = 0; y <= yMax; ++y){
      var h = y / yMax * 360;
      var l = x / xMax;
      var rgb = Color.convert([
            h,
            0.0,
            l
          ], Color.OKHSL, Color.sRGB);
      ctx.fillStyle = Color.RGBToHex(rgb);
      ctx.fillRect(x, y, 1, 1);
    }
  }
}

var xSizeScaled = 300 * window.devicePixelRatio | 0;

var ySizeScaled = 300 * window.devicePixelRatio | 0;

function HslSGamut(props) {
  var selectedElement = props.selectedElement;
  var selectedHue = props.selectedHue;
  var hues = props.hues;
  var canvasRef = React.useRef(null);
  var hueObj = Core__Option.flatMap(selectedHue, (function (s) {
          return hues.find(function (v) {
                      return v.id === s;
                    });
        }));
  React.useEffect((function () {
          var canvasDom = canvasRef.current;
          if (canvasDom === null || canvasDom === undefined) {
            canvasDom === null;
          } else {
            var context = canvasDom.getContext("2d");
            if (hueObj !== undefined) {
              context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);
              canvasDom.width = xSizeScaled;
              canvasDom.height = ySizeScaled;
              updateHslSGamutCanvas(canvasDom, context);
            } else {
              context.clearRect(0, 0, 300, 300);
            }
          }
        }), [
        canvasRef.current,
        selectedHue,
        Core__Option.flatMap(selectedHue, (function (selectedHue_) {
                return hues.find(function (hue) {
                            return hue.id === selectedHue_;
                          });
              }))
      ]);
  return JsxRuntime.jsxs("div", {
              children: [
                Core__Option.isNone(selectedHue) ? null : Belt_Array.concatMany(hues.map(function (hue) {
                            return hue.elements.map(function (e) {
                                        var hex = Color.RGBToHex(Color.convert([
                                                  hue.value,
                                                  e.saturation,
                                                  e.lightness
                                                ], Color.OKHSL, Color.sRGB));
                                        return JsxRuntime.jsx("div", {
                                                    children: Core__Option.mapOr(selectedElement, false, (function (x) {
                                                            return x === e.id;
                                                          })) ? "â€¢" : null,
                                                    className: "absolute w-5 h-5 border border-black flex flex-row items-center justify-center",
                                                    style: {
                                                      backgroundColor: hex,
                                                      left: (e.lightness * 300 | 0).toString() + "px",
                                                      top: (hue.value / 360 * 300 | 0).toString() + "px"
                                                    }
                                                  });
                                      });
                          })),
                JsxRuntime.jsx("canvas", {
                      ref: Caml_option.some(canvasRef),
                      style: {
                        height: (300).toString() + "px",
                        width: (300).toString() + "px"
                      }
                    })
              ],
              className: "w-fit relative border border-black rounded-sm"
            });
}

var xSize = 300;

var ySize = 300;

var make = HslSGamut;

export {
  updateHslSGamutCanvas ,
  xSize ,
  ySize ,
  xSizeScaled ,
  ySizeScaled ,
  make ,
}
/* xSizeScaled Not a pure module */
